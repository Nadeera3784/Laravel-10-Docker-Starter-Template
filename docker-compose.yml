version: "3.9"

networks:
  laravel-network:
    driver: bridge
    name: laravel-network

volumes:
  mysql-data:
    name: laravel_mysql-data
  redis-data:
    name: laravel_redis-data

services:
 
  app:
    build:
      context: .
      dockerfile: ./docker/php/Dockerfile
    restart: unless-stopped
    working_dir: /var/www/
    environment:
      SERVICE_NAME: app
      SERVICE_TAGS: dev
    command: ["php-fpm"]
    volumes:
        - ./:/var/www
        - ./docker/php/startup.sh:/usr/local/bin/startup.sh
    depends_on:
        - redis
    networks:
        - laravel-network

  nginx:
    image: nginx:alpine
    restart: unless-stopped
    ports:
        - "80:80"
    volumes:
        - ./:/var/www
        - ./docker/nginx/:/etc/nginx/conf.d/
    networks:
      - laravel-network

  mysql:
    image: mysql:8.0.26
    platform: linux/amd64
    restart: unless-stopped
    environment:
      MYSQL_DATABASE: ${DB_DATABASE}
      MYSQL_ROOT_PASSWORD: ${DB_PASSWORD}
      MYSQL_PASSWORD: ${DB_PASSWORD}
      MYSQL_USER: ${DB_USERNAME}
      MYSQL_ROOT_PASSWORD: y${MYSQL_ROOT_PASSWORD}
      SERVICE_TAGS: dev
      SERVICE_NAME: mysql
    volumes:
        - mysql-data:/var/lib/mysql:delegated
    ports:
        - "3388:3306"
    networks:
        - laravel-network

  phpmyadmin:
    image: phpmyadmin
    restart: always
    ports:
      - 8080:80
    environment:
      - PMA_ARBITRARY=1

  redis:
    image: redis:latest
    platform: linux/amd64
    command: ["redis-server", "--appendonly", "yes"]
    ports:
        - "6379:6379"
    volumes:
        - redis-data:/data
    networks:
        - laravel-network

  npm:
    image: node:20.0
    volumes:
      - ./:/var/www:delegated
    working_dir: /var/www
    tty: true
    entrypoint: [ 'bash' ]
    networks:
      - laravel-network